
# cmp_parse_tab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "translation_unitright-right~right+ARRAY_DIV ARRAY_MUL ARRAY_POW ARRAY_RDIV BREAK CLEAR COMMENT CONSTANT ELSE ELSEIF END EQ_OP FOR FUNCTION GE_OP GLOBAL IDENTIFIER IF LE_OP NEWLINE NE_OP RETURN STRING_LITERAL TRANSPOSE WHILE\n        primary_expression : identifier_expression\n                           | constant_expression\n                           | string_literal_expression\n                           | '(' expression ')'\n                           | '[' ']'\n                           | '[' array_list ']'\n        \n        identifier_expression : IDENTIFIER\n        \n        constant_expression : CONSTANT\n        \n        string_literal_expression : STRING_LITERAL\n        \n        postfix_expression : primary_expression\n                           | array_expression\n                           | postfix_expression TRANSPOSE\n        \n        index_expression : ':'\n                         | expression\n        \n        index_expression_list : index_expression\n                              | index_expression_list ',' index_expression\n        \n        array_expression : IDENTIFIER '(' index_expression_list ')'\n        \n        unary_expression : postfix_expression\n                         | unary_operator postfix_expression\n        \n        unary_operator : '+'\n                       | '-'\n                       | '~'\n        \n        multiplicative_expression : unary_expression\n                                  | multiplicative_expression '*' unary_expression\n                                  | multiplicative_expression '/' unary_expression\n                                  | multiplicative_expression '^' unary_expression\n                                  | multiplicative_expression ARRAY_MUL unary_expression\n                                  | multiplicative_expression ARRAY_DIV unary_expression\n                                  | multiplicative_expression ARRAY_RDIV unary_expression\n                                  | multiplicative_expression ARRAY_POW unary_expression\n        \n        additive_expression : multiplicative_expression\n                            | additive_expression '+' multiplicative_expression\n                            | additive_expression '-' multiplicative_expression\n        \n        relational_expression : additive_expression\n                              | relational_expression '<' additive_expression\n                              | relational_expression '>' additive_expression\n                              | relational_expression LE_OP additive_expression\n                              | relational_expression GE_OP additive_expression\n        \n        equality_expression : relational_expression\n                            | equality_expression EQ_OP relational_expression\n                            | equality_expression NE_OP relational_expression\n        \n        and_expression : equality_expression\n                       | and_expression '&' equality_expression\n        \n        or_expression : and_expression\n                      | or_expression '|' and_expression\n        \n        expression : or_expression\n                   | expression ':' or_expression\n        \n        assignment_expression : postfix_expression '=' expression\n        \n        eostmt : ','\n               | ';'\n               | NEWLINE\n        \n        statement : global_statement\n                  | clear_statement\n                  | assignment_statement\n                  | expression_statement\n                  | selection_statement\n                  | iteration_statement\n                  | jump_statement\n                  | func_statement\n        \n        statement_list : statement\n                       | statement_list statement\n                       | statement_list_error\n        \n        statement_list_error : statement_list error\n        \n        identifier_list : IDENTIFIER\n                        | identifier_list IDENTIFIER\n        \n        global_statement : GLOBAL identifier_list eostmt\n        \n        clear_statement : CLEAR identifier_list eostmt\n        \n        expression_statement : eostmt\n                             | expression eostmt\n        \n        assignment_statement : assignment_expression eostmt\n        \n        array_element : expression\n                      | expression_statement\n        \n        array_list : array_element\n                   | array_list array_element\n        \n        selection_statement : IF expression statement_list END eostmt\n                            | IF expression statement_list ELSE statement_list END eostmt\n                            | IF expression statement_list elseif_clause END eostmt\n                            | IF expression statement_list elseif_clause ELSE statement_list END eostmt\n                            | selection_statement_invoke_error\n                            | selection_statement_error\n        \n        selection_statement_error : IF error\n        \n        selection_statement_invoke_error : IF expression statement_list\n        \n        elseif_clause : ELSEIF expression statement_list\n                      | elseif_clause ELSEIF expression statement_list\n        \n        iteration_statement : WHILE expression statement_list END eostmt\n                            | FOR IDENTIFIER '=' expression statement_list END eostmt\n                            | FOR '(' IDENTIFIER '=' expression ')' statement_list END eostmt\n        \n        jump_statement : BREAK eostmt\n                       | RETURN eostmt\n        \n        translation_unit : statement_list\n        \n        func_identifier_list : IDENTIFIER\n                             | func_identifier_list ',' IDENTIFIER\n        \n        func_return_list : IDENTIFIER\n                         | '[' func_identifier_list ']'\n        \n        func_declare_lhs : IDENTIFIER\n                         | IDENTIFIER '(' ')'\n                         | IDENTIFIER '(' func_identifier_list ')'\n        \n        func_declare : func_declare_lhs\n                     | func_return_list '=' func_declare_lhs\n                     | func_declare_invoke_error\n        \n        func_declare_invoke_error : func_return_list '='\n                           | func_return_list\n        \n        func_statement : FUNCTION func_declare eostmt statement_list END\n                       | func_statement_error\n        \n        func_statement_error : FUNCTION error eostmt statement_list END\n        "
    
_lr_action_items = {'GLOBAL':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[13,13,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,13,-81,-18,13,-88,-89,-12,-5,-19,-66,-67,-47,13,13,-4,13,13,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,13,13,-17,13,13,-75,13,13,13,-85,13,-103,-105,-77,13,13,13,13,-76,13,-86,13,-78,-87,]),'CLEAR':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[15,15,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,15,-81,-18,15,-88,-89,-12,-5,-19,-66,-67,-47,15,15,-4,15,15,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,15,15,-17,15,15,-75,15,15,15,-85,15,-103,-105,-77,15,15,15,15,-76,15,-86,15,-78,-87,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[18,18,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,18,-81,-18,18,-88,-89,-12,-5,-19,-66,-67,-47,18,18,-4,18,18,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,18,18,-17,18,18,-75,18,18,18,-85,18,-103,-105,-77,18,18,18,18,-76,18,-86,18,-78,-87,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[21,21,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,21,-81,-18,21,-88,-89,-12,-5,-19,-66,-67,-47,21,21,-4,21,21,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,21,21,-17,21,21,-75,21,21,21,-85,21,-103,-105,-77,21,21,21,21,-76,21,-86,21,-78,-87,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[22,22,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,22,-81,-18,22,-88,-89,-12,-5,-19,-66,-67,-47,22,22,-4,22,22,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,22,22,-17,22,22,-75,22,22,22,-85,22,-103,-105,-77,22,22,22,22,-76,22,-86,22,-78,-87,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[25,25,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,25,-81,-18,25,-88,-89,-12,-5,-19,-66,-67,-47,25,25,-4,25,25,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,25,25,-17,25,25,-75,25,25,25,-85,25,-103,-105,-77,25,25,25,25,-76,25,-86,25,-78,-87,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[26,26,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,26,-81,-18,26,-88,-89,-12,-5,-19,-66,-67,-47,26,26,-4,26,26,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,26,26,-17,26,26,-75,26,26,26,-85,26,-103,-105,-77,26,26,26,26,-76,26,-86,26,-78,-87,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,28,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,52,53,57,58,60,61,62,63,68,69,78,81,101,102,104,105,106,107,114,115,116,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,148,150,151,158,159,161,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[27,27,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-7,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,27,-81,-18,27,-88,-89,-12,-5,-19,-66,-67,-47,27,27,-4,27,27,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,27,27,-17,27,27,-75,27,27,27,-85,27,-103,-105,-77,27,27,27,27,-76,27,-86,27,-78,-87,]),',':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,17,19,20,23,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,54,55,56,57,58,60,61,62,63,68,69,70,71,72,73,74,75,78,81,82,83,84,85,101,102,103,104,105,106,107,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,148,150,151,152,153,154,155,156,158,159,160,161,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,],[30,30,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,30,30,-79,-80,-7,30,30,-104,-18,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,30,-42,-8,-9,-39,-34,-31,-23,-61,-63,30,-64,30,-70,-69,30,-81,-18,30,-88,-89,30,30,-98,-102,-100,-93,-12,-5,30,-73,30,-72,-19,-66,-65,-67,-47,30,30,149,-15,-13,-14,-4,30,30,-101,157,-91,-48,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,30,30,30,30,-17,30,30,-99,-95,-96,157,-94,-75,30,30,30,30,-85,30,-16,-103,-105,-97,-92,30,-77,30,30,30,30,30,-76,30,30,-86,30,-78,30,-87,]),';':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,17,19,20,23,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,54,55,56,57,58,60,61,62,63,68,69,70,71,72,73,74,75,78,81,82,83,84,85,101,102,103,104,105,106,107,114,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,148,150,151,152,153,154,156,158,159,160,161,163,164,165,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,],[31,31,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,31,31,-79,-80,-7,31,31,-104,-18,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,31,-42,-8,-9,-39,-34,-31,-23,-61,-63,31,-64,31,-70,-69,31,-81,-18,31,-88,-89,31,31,-98,-102,-100,-93,-12,-5,31,-73,31,-72,-19,-66,-65,-67,-47,31,31,-4,31,31,-101,-48,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,31,31,31,31,-17,31,31,-99,-95,-96,-94,-75,31,31,31,31,-85,31,-103,-105,-97,31,-77,31,31,31,31,31,-76,31,31,-86,31,-78,31,-87,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,17,19,20,23,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,54,55,56,57,58,60,61,62,63,68,69,70,71,72,73,74,75,78,81,82,83,84,85,101,102,103,104,105,106,107,114,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,148,150,151,152,153,154,156,158,159,160,161,163,164,165,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,],[32,32,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,32,32,-79,-80,-7,32,32,-104,-18,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,32,-42,-8,-9,-39,-34,-31,-23,-61,-63,32,-64,32,-70,-69,32,-81,-18,32,-88,-89,32,32,-98,-102,-100,-93,-12,-5,32,-73,32,-72,-19,-66,-65,-67,-47,32,32,-4,32,32,-101,-48,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,32,32,32,32,-17,32,32,-99,-95,-96,-94,-75,32,32,32,32,-85,32,-103,-105,-97,32,-77,32,32,32,32,32,-76,32,32,-86,32,-78,32,-87,]),'(':([0,2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,21,22,23,24,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,66,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,114,115,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,153,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[24,24,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,24,-79,-80,24,65,66,24,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,24,-42,-8,-9,-39,-34,-31,-20,-21,-23,24,-22,-61,-63,-70,-69,24,24,-81,-18,24,24,-88,-89,118,24,-12,24,24,-5,24,-73,-71,-72,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-19,-66,-67,-47,24,24,24,-4,24,24,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,24,24,24,24,-17,24,24,24,118,-75,24,24,24,24,-85,24,-103,-105,-77,24,24,24,24,-76,24,-86,24,-78,-87,]),'[':([0,2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,21,23,24,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,114,115,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[40,40,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,40,-79,-80,40,-7,40,76,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,40,-42,-8,-9,-39,-34,-31,-20,-21,-23,40,-22,-61,-63,-70,-69,40,40,-81,-18,40,40,-88,-89,40,-12,40,40,-5,40,-73,-71,-72,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-19,-66,-67,-47,40,40,40,-4,40,40,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,40,40,40,40,-17,40,40,40,-75,40,40,40,40,-85,40,-103,-105,-77,40,40,40,40,-76,40,-86,40,-78,-87,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,115,116,117,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,157,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[23,23,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,55,-68,55,23,-79,-80,23,64,-7,23,75,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,23,-42,-8,-9,-39,-34,-31,-20,-21,-23,23,-22,-61,-63,103,-64,103,-70,-69,23,23,-81,-18,23,109,23,-88,-89,120,23,-12,23,23,-5,23,-73,-71,-72,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-19,-66,-65,-67,-47,23,23,23,-4,23,23,153,120,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,23,23,23,23,-17,23,23,23,171,-75,23,23,23,23,-85,23,-103,-105,-77,23,23,23,23,-76,23,-86,23,-78,-87,]),'CONSTANT':([0,2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,21,23,24,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,114,115,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[42,42,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,42,-79,-80,42,-7,42,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,42,-42,-8,-9,-39,-34,-31,-20,-21,-23,42,-22,-61,-63,-70,-69,42,42,-81,-18,42,42,-88,-89,42,-12,42,42,-5,42,-73,-71,-72,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-19,-66,-67,-47,42,42,42,-4,42,42,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,42,42,42,42,-17,42,42,42,-75,42,42,42,42,-85,42,-103,-105,-77,42,42,42,42,-76,42,-86,42,-78,-87,]),'STRING_LITERAL':([0,2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,21,23,24,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,114,115,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[43,43,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,43,-79,-80,43,-7,43,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,43,-42,-8,-9,-39,-34,-31,-20,-21,-23,43,-22,-61,-63,-70,-69,43,43,-81,-18,43,43,-88,-89,43,-12,43,43,-5,43,-73,-71,-72,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-19,-66,-67,-47,43,43,43,-4,43,43,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,43,43,43,43,-17,43,43,43,-75,43,43,43,43,-85,43,-103,-105,-77,43,43,43,43,-76,43,-86,43,-78,-87,]),'+':([0,2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,21,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,57,58,59,60,61,62,63,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,114,115,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[47,47,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,47,-79,-80,47,-7,47,-104,-18,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,47,-42,-8,-9,-39,92,-31,-23,-61,-63,-70,-69,47,47,-81,-18,47,47,-88,-89,47,-12,47,47,-5,47,-73,-71,-72,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-19,-66,-67,-47,47,47,47,-4,47,47,-45,-43,-6,-74,-40,-41,92,92,92,92,-32,-33,-24,-25,-26,-27,-28,-29,-30,47,47,47,47,-17,47,47,47,-75,47,47,47,47,-85,47,-103,-105,-77,47,47,47,47,-76,47,-86,47,-78,-87,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,21,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,57,58,59,60,61,62,63,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,114,115,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[48,48,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,48,-79,-80,48,-7,48,-104,-18,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,48,-42,-8,-9,-39,93,-31,-23,-61,-63,-70,-69,48,48,-81,-18,48,48,-88,-89,48,-12,48,48,-5,48,-73,-71,-72,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-19,-66,-67,-47,48,48,48,-4,48,48,-45,-43,-6,-74,-40,-41,93,93,93,93,-32,-33,-24,-25,-26,-27,-28,-29,-30,48,48,48,48,-17,48,48,48,-75,48,48,48,48,-85,48,-103,-105,-77,48,48,48,48,-76,48,-86,48,-78,-87,]),'~':([0,2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,21,23,24,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,57,58,59,60,61,62,63,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,114,115,116,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,146,147,148,149,150,151,158,159,161,162,163,164,165,168,169,173,174,175,176,178,179,181,182,183,184,186,],[51,51,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,51,-79,-80,51,-7,51,-104,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,51,-42,-8,-9,-39,-34,-31,-23,-61,-63,-70,-69,51,51,-81,-18,51,51,-88,-89,51,-12,51,51,-5,51,-73,-71,-72,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-19,-66,-67,-47,51,51,51,-4,51,51,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,51,51,51,51,-17,51,51,51,-75,51,51,51,51,-85,51,-103,-105,-77,51,51,51,51,-76,51,-86,51,-78,-87,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,14,19,20,28,30,31,32,52,53,57,58,61,68,69,102,104,106,158,164,168,169,173,179,182,184,186,],[0,-90,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-104,-49,-50,-51,-61,-63,-70,-69,-81,-88,-89,-66,-67,-82,-75,-85,-103,-105,-77,-76,-86,-78,-87,]),'error':([2,3,4,5,6,7,8,9,10,11,12,14,18,19,20,27,28,30,31,32,52,53,57,58,61,68,69,102,104,106,107,150,151,158,159,164,165,168,169,173,174,176,179,181,182,183,184,186,],[53,-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,61,-79,-80,71,-104,-49,-50,-51,-61,-63,-70,-69,-81,-88,-89,-66,-67,53,53,53,53,-75,53,-85,53,-103,-105,-77,53,53,-76,53,-86,53,-78,-87,]),'END':([3,4,5,6,7,8,9,10,11,12,14,19,20,28,30,31,32,52,53,57,58,61,68,69,102,104,106,107,143,150,151,158,159,164,165,168,169,173,174,176,179,181,182,183,184,186,],[-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-104,-49,-50,-51,-61,-63,-70,-69,-81,-88,-89,-66,-67,141,145,160,168,169,-75,172,-85,177,-103,-105,-77,180,-83,-76,-84,-86,185,-78,-87,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,14,19,20,28,30,31,32,52,53,57,58,61,68,69,102,104,106,143,158,164,168,169,173,176,179,181,182,184,186,],[-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-104,-49,-50,-51,-61,-63,-70,-69,-81,-88,-89,-66,-67,142,161,-75,-85,-103,-105,-77,-83,-76,-84,-86,-78,-87,]),'ELSEIF':([3,4,5,6,7,8,9,10,11,12,14,19,20,28,30,31,32,52,53,57,58,61,68,69,102,104,106,143,158,164,168,169,173,176,179,181,182,184,186,],[-60,-62,-52,-53,-54,-55,-56,-57,-58,-59,-68,-79,-80,-104,-49,-50,-51,-61,-63,-70,-69,-81,-88,-89,-66,-67,144,162,-75,-85,-103,-105,-77,-83,-76,-84,-86,-78,-87,]),']':([14,23,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,62,78,81,82,83,84,85,101,105,114,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,171,],[-68,-7,-49,-50,-51,-46,-10,-11,-44,-1,-2,-3,81,-42,-8,-9,-39,-34,-31,-23,-69,-18,-12,-5,124,-73,-71,-72,-19,-47,-4,156,-91,-45,-43,-6,-74,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,-92,]),':':([17,23,29,33,34,35,36,37,38,39,41,42,43,44,45,46,49,60,62,63,66,67,78,81,84,101,105,113,114,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,148,149,163,166,175,],[59,-7,-18,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,59,-18,59,112,59,-12,-5,59,-19,-47,59,-4,59,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,59,-17,112,59,59,59,]),'=':([23,29,34,35,37,38,39,42,43,64,73,75,78,81,109,114,124,148,156,],[-7,77,-10,-11,-1,-2,-3,-8,-9,108,117,-93,-12,-5,147,-4,-6,-17,-94,]),'TRANSPOSE':([23,29,34,35,37,38,39,42,43,62,78,81,101,114,124,148,],[-7,78,-10,-11,-1,-2,-3,-8,-9,78,-12,-5,78,-4,-6,-17,]),'*':([23,29,34,35,37,38,39,42,43,46,49,62,78,81,101,114,124,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,94,-23,-18,-12,-5,-19,-4,-6,94,94,-24,-25,-26,-27,-28,-29,-30,-17,]),'/':([23,29,34,35,37,38,39,42,43,46,49,62,78,81,101,114,124,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,95,-23,-18,-12,-5,-19,-4,-6,95,95,-24,-25,-26,-27,-28,-29,-30,-17,]),'^':([23,29,34,35,37,38,39,42,43,46,49,62,78,81,101,114,124,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,96,-23,-18,-12,-5,-19,-4,-6,96,96,-24,-25,-26,-27,-28,-29,-30,-17,]),'ARRAY_MUL':([23,29,34,35,37,38,39,42,43,46,49,62,78,81,101,114,124,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,97,-23,-18,-12,-5,-19,-4,-6,97,97,-24,-25,-26,-27,-28,-29,-30,-17,]),'ARRAY_DIV':([23,29,34,35,37,38,39,42,43,46,49,62,78,81,101,114,124,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,98,-23,-18,-12,-5,-19,-4,-6,98,98,-24,-25,-26,-27,-28,-29,-30,-17,]),'ARRAY_RDIV':([23,29,34,35,37,38,39,42,43,46,49,62,78,81,101,114,124,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,99,-23,-18,-12,-5,-19,-4,-6,99,99,-24,-25,-26,-27,-28,-29,-30,-17,]),'ARRAY_POW':([23,29,34,35,37,38,39,42,43,46,49,62,78,81,101,114,124,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,100,-23,-18,-12,-5,-19,-4,-6,100,100,-24,-25,-26,-27,-28,-29,-30,-17,]),'<':([23,29,34,35,37,38,39,42,43,44,45,46,49,62,78,81,101,114,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,88,-34,-31,-23,-18,-12,-5,-19,-4,-6,88,88,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),'>':([23,29,34,35,37,38,39,42,43,44,45,46,49,62,78,81,101,114,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,89,-34,-31,-23,-18,-12,-5,-19,-4,-6,89,89,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),'LE_OP':([23,29,34,35,37,38,39,42,43,44,45,46,49,62,78,81,101,114,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,90,-34,-31,-23,-18,-12,-5,-19,-4,-6,90,90,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),'GE_OP':([23,29,34,35,37,38,39,42,43,44,45,46,49,62,78,81,101,114,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,-8,-9,91,-34,-31,-23,-18,-12,-5,-19,-4,-6,91,91,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),'EQ_OP':([23,29,34,35,37,38,39,41,42,43,44,45,46,49,62,78,81,101,114,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,86,-8,-9,-39,-34,-31,-23,-18,-12,-5,-19,-4,86,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),'NE_OP':([23,29,34,35,37,38,39,41,42,43,44,45,46,49,62,78,81,101,114,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,-1,-2,-3,87,-8,-9,-39,-34,-31,-23,-18,-12,-5,-19,-4,87,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),'&':([23,29,34,35,36,37,38,39,41,42,43,44,45,46,49,62,78,81,101,114,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,-10,-11,80,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-18,-12,-5,-19,-4,80,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),'|':([23,29,33,34,35,36,37,38,39,41,42,43,44,45,46,49,62,78,81,101,105,114,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,],[-7,-18,79,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-18,-12,-5,-19,79,-4,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,]),')':([23,33,34,35,36,37,38,39,41,42,43,44,45,46,49,62,67,78,81,101,105,110,111,112,113,114,118,120,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,155,166,167,171,],[-7,-46,-10,-11,-44,-1,-2,-3,-42,-8,-9,-39,-34,-31,-23,-18,114,-12,-5,-19,-47,148,-15,-13,-14,-4,154,-91,-45,-43,-6,-40,-41,-35,-36,-37,-38,-32,-33,-24,-25,-26,-27,-28,-29,-30,-17,170,178,-16,-92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'statement_list':([0,60,63,115,116,142,146,161,163,175,178,],[2,106,107,150,151,159,165,174,176,181,183,]),'statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[3,52,3,3,52,52,3,3,3,3,52,52,52,3,3,52,52,3,52,3,52,52,]),'statement_list_error':([0,60,63,115,116,142,146,161,163,175,178,],[4,4,4,4,4,4,4,4,4,4,4,]),'global_statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'clear_statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment_statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expression_statement':([0,2,40,60,63,82,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[8,8,85,8,8,85,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'selection_statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'iteration_statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'jump_statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'func_statement':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'eostmt':([0,2,16,17,25,26,40,54,56,60,63,70,71,82,84,106,107,115,116,141,142,145,146,150,151,159,160,161,163,165,172,174,175,176,177,178,180,181,183,185,],[14,14,57,58,68,69,14,102,104,14,14,115,116,14,58,14,14,14,14,158,14,164,14,14,14,14,173,14,14,14,179,14,14,14,182,14,184,14,14,186,]),'assignment_expression':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression':([0,2,18,21,24,40,60,63,66,77,82,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[17,17,60,63,67,84,17,17,113,121,84,17,17,146,17,17,17,163,17,166,113,17,17,17,17,175,17,17,17,17,17,17,17,17,]),'selection_statement_invoke_error':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'selection_statement_error':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'func_statement_error':([0,2,60,63,106,107,115,116,142,146,150,151,159,161,163,165,174,175,176,178,181,183,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'postfix_expression':([0,2,18,21,24,40,50,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[29,29,62,62,62,62,101,62,29,29,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,29,29,62,29,29,29,62,29,62,62,29,29,29,29,62,29,29,29,29,29,29,29,29,]),'or_expression':([0,2,18,21,24,40,59,60,63,66,77,82,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[33,33,33,33,33,33,105,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'primary_expression':([0,2,18,21,24,40,50,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'array_expression':([0,2,18,21,24,40,50,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'and_expression':([0,2,18,21,24,40,59,60,63,66,77,79,82,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[36,36,36,36,36,36,36,36,36,36,36,122,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'identifier_expression':([0,2,18,21,24,40,50,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'constant_expression':([0,2,18,21,24,40,50,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'string_literal_expression':([0,2,18,21,24,40,50,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'equality_expression':([0,2,18,21,24,40,59,60,63,66,77,79,80,82,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[41,41,41,41,41,41,41,41,41,41,41,41,123,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'relational_expression':([0,2,18,21,24,40,59,60,63,66,77,79,80,82,86,87,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,126,127,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'additive_expression':([0,2,18,21,24,40,59,60,63,66,77,79,80,82,86,87,88,89,90,91,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,128,129,130,131,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'multiplicative_expression':([0,2,18,21,24,40,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,132,133,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'unary_expression':([0,2,18,21,24,40,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,134,135,136,137,138,139,140,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'unary_operator':([0,2,18,21,24,40,59,60,63,66,77,79,80,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,115,116,142,144,146,147,149,150,151,159,161,162,163,165,174,175,176,178,181,183,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'identifier_list':([13,15,],[54,56,]),'func_declare':([27,],[70,]),'func_declare_lhs':([27,117,],[72,152,]),'func_return_list':([27,],[73,]),'func_declare_invoke_error':([27,],[74,]),'array_list':([40,],[82,]),'array_element':([40,82,],[83,125,]),'index_expression_list':([66,],[110,]),'index_expression':([66,149,],[111,167,]),'func_identifier_list':([76,118,],[119,155,]),'elseif_clause':([106,],[143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> identifier_expression','primary_expression',1,'p_primary_expression','parser.py',98),
  ('primary_expression -> constant_expression','primary_expression',1,'p_primary_expression','parser.py',99),
  ('primary_expression -> string_literal_expression','primary_expression',1,'p_primary_expression','parser.py',100),
  ('primary_expression -> ( expression )','primary_expression',3,'p_primary_expression','parser.py',101),
  ('primary_expression -> [ ]','primary_expression',2,'p_primary_expression','parser.py',102),
  ('primary_expression -> [ array_list ]','primary_expression',3,'p_primary_expression','parser.py',103),
  ('identifier_expression -> IDENTIFIER','identifier_expression',1,'p_identifier_expression','parser.py',117),
  ('constant_expression -> CONSTANT','constant_expression',1,'p_constant_expression','parser.py',123),
  ('string_literal_expression -> STRING_LITERAL','string_literal_expression',1,'p_string_literal_expression','parser.py',129),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',135),
  ('postfix_expression -> array_expression','postfix_expression',1,'p_postfix_expression','parser.py',136),
  ('postfix_expression -> postfix_expression TRANSPOSE','postfix_expression',2,'p_postfix_expression','parser.py',137),
  ('index_expression -> :','index_expression',1,'p_index_expression','parser.py',143),
  ('index_expression -> expression','index_expression',1,'p_index_expression','parser.py',144),
  ('index_expression_list -> index_expression','index_expression_list',1,'p_index_expression_list','parser.py',150),
  ('index_expression_list -> index_expression_list , index_expression','index_expression_list',3,'p_index_expression_list','parser.py',151),
  ('array_expression -> IDENTIFIER ( index_expression_list )','array_expression',4,'p_array_expression','parser.py',157),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',163),
  ('unary_expression -> unary_operator postfix_expression','unary_expression',2,'p_unary_expression','parser.py',164),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator','parser.py',170),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator','parser.py',171),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator','parser.py',172),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',178),
  ('multiplicative_expression -> multiplicative_expression * unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',179),
  ('multiplicative_expression -> multiplicative_expression / unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',180),
  ('multiplicative_expression -> multiplicative_expression ^ unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',181),
  ('multiplicative_expression -> multiplicative_expression ARRAY_MUL unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',182),
  ('multiplicative_expression -> multiplicative_expression ARRAY_DIV unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',183),
  ('multiplicative_expression -> multiplicative_expression ARRAY_RDIV unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',184),
  ('multiplicative_expression -> multiplicative_expression ARRAY_POW unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',185),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',191),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',192),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',193),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','parser.py',199),
  ('relational_expression -> relational_expression < additive_expression','relational_expression',3,'p_relational_expression','parser.py',200),
  ('relational_expression -> relational_expression > additive_expression','relational_expression',3,'p_relational_expression','parser.py',201),
  ('relational_expression -> relational_expression LE_OP additive_expression','relational_expression',3,'p_relational_expression','parser.py',202),
  ('relational_expression -> relational_expression GE_OP additive_expression','relational_expression',3,'p_relational_expression','parser.py',203),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',209),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',210),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',211),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',217),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression','parser.py',218),
  ('or_expression -> and_expression','or_expression',1,'p_or_expression','parser.py',224),
  ('or_expression -> or_expression | and_expression','or_expression',3,'p_or_expression','parser.py',225),
  ('expression -> or_expression','expression',1,'p_expression','parser.py',231),
  ('expression -> expression : or_expression','expression',3,'p_expression','parser.py',232),
  ('assignment_expression -> postfix_expression = expression','assignment_expression',3,'p_assignment_expression','parser.py',238),
  ('eostmt -> ,','eostmt',1,'p_eostmt','parser.py',244),
  ('eostmt -> ;','eostmt',1,'p_eostmt','parser.py',245),
  ('eostmt -> NEWLINE','eostmt',1,'p_eostmt','parser.py',246),
  ('statement -> global_statement','statement',1,'p_statement','parser.py',252),
  ('statement -> clear_statement','statement',1,'p_statement','parser.py',253),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',254),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',255),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',256),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',257),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',258),
  ('statement -> func_statement','statement',1,'p_statement','parser.py',259),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',265),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',266),
  ('statement_list -> statement_list_error','statement_list',1,'p_statement_list','parser.py',267),
  ('statement_list_error -> statement_list error','statement_list_error',2,'p_statement_list_error','parser.py',273),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser.py',285),
  ('identifier_list -> identifier_list IDENTIFIER','identifier_list',2,'p_identifier_list','parser.py',286),
  ('global_statement -> GLOBAL identifier_list eostmt','global_statement',3,'p_global_statement','parser.py',292),
  ('clear_statement -> CLEAR identifier_list eostmt','clear_statement',3,'p_clear_statement','parser.py',298),
  ('expression_statement -> eostmt','expression_statement',1,'p_expression_statement','parser.py',304),
  ('expression_statement -> expression eostmt','expression_statement',2,'p_expression_statement','parser.py',305),
  ('assignment_statement -> assignment_expression eostmt','assignment_statement',2,'p_assignment_statement','parser.py',311),
  ('array_element -> expression','array_element',1,'p_array_element','parser.py',317),
  ('array_element -> expression_statement','array_element',1,'p_array_element','parser.py',318),
  ('array_list -> array_element','array_list',1,'p_array_list','parser.py',324),
  ('array_list -> array_list array_element','array_list',2,'p_array_list','parser.py',325),
  ('selection_statement -> IF expression statement_list END eostmt','selection_statement',5,'p_selection_statement','parser.py',331),
  ('selection_statement -> IF expression statement_list ELSE statement_list END eostmt','selection_statement',7,'p_selection_statement','parser.py',332),
  ('selection_statement -> IF expression statement_list elseif_clause END eostmt','selection_statement',6,'p_selection_statement','parser.py',333),
  ('selection_statement -> IF expression statement_list elseif_clause ELSE statement_list END eostmt','selection_statement',8,'p_selection_statement','parser.py',334),
  ('selection_statement -> selection_statement_invoke_error','selection_statement',1,'p_selection_statement','parser.py',335),
  ('selection_statement -> selection_statement_error','selection_statement',1,'p_selection_statement','parser.py',336),
  ('selection_statement_error -> IF error','selection_statement_error',2,'p_selection_statement_error','parser.py',351),
  ('selection_statement_invoke_error -> IF expression statement_list','selection_statement_invoke_error',3,'p_selection_statement_invoke_error','parser.py',363),
  ('elseif_clause -> ELSEIF expression statement_list','elseif_clause',3,'p_elseif_clause','parser.py',369),
  ('elseif_clause -> elseif_clause ELSEIF expression statement_list','elseif_clause',4,'p_elseif_clause','parser.py',370),
  ('iteration_statement -> WHILE expression statement_list END eostmt','iteration_statement',5,'p_iteration_statement','parser.py',379),
  ('iteration_statement -> FOR IDENTIFIER = expression statement_list END eostmt','iteration_statement',7,'p_iteration_statement','parser.py',380),
  ('iteration_statement -> FOR ( IDENTIFIER = expression ) statement_list END eostmt','iteration_statement',9,'p_iteration_statement','parser.py',381),
  ('jump_statement -> BREAK eostmt','jump_statement',2,'p_jump_statement','parser.py',393),
  ('jump_statement -> RETURN eostmt','jump_statement',2,'p_jump_statement','parser.py',394),
  ('translation_unit -> statement_list','translation_unit',1,'p_translation_unit','parser.py',403),
  ('func_identifier_list -> IDENTIFIER','func_identifier_list',1,'p_func_identifier_list','parser.py',409),
  ('func_identifier_list -> func_identifier_list , IDENTIFIER','func_identifier_list',3,'p_func_identifier_list','parser.py',410),
  ('func_return_list -> IDENTIFIER','func_return_list',1,'p_func_return_list','parser.py',419),
  ('func_return_list -> [ func_identifier_list ]','func_return_list',3,'p_func_return_list','parser.py',420),
  ('func_declare_lhs -> IDENTIFIER','func_declare_lhs',1,'p_func_declare_lhs','parser.py',429),
  ('func_declare_lhs -> IDENTIFIER ( )','func_declare_lhs',3,'p_func_declare_lhs','parser.py',430),
  ('func_declare_lhs -> IDENTIFIER ( func_identifier_list )','func_declare_lhs',4,'p_func_declare_lhs','parser.py',431),
  ('func_declare -> func_declare_lhs','func_declare',1,'p_func_declare','parser.py',440),
  ('func_declare -> func_return_list = func_declare_lhs','func_declare',3,'p_func_declare','parser.py',441),
  ('func_declare -> func_declare_invoke_error','func_declare',1,'p_func_declare','parser.py',442),
  ('func_declare_invoke_error -> func_return_list =','func_declare_invoke_error',2,'p_func_declare_invoke_error','parser.py',451),
  ('func_declare_invoke_error -> func_return_list','func_declare_invoke_error',1,'p_func_declare_invoke_error','parser.py',452),
  ('func_statement -> FUNCTION func_declare eostmt statement_list END','func_statement',5,'p_func_statement','parser.py',458),
  ('func_statement -> func_statement_error','func_statement',1,'p_func_statement','parser.py',459),
  ('func_statement_error -> FUNCTION error eostmt statement_list END','func_statement_error',5,'p_func_statement_error','parser.py',468),
]
